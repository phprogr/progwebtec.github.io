<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Applications WS2015/2016 - Homework 1 on Prof. Dr. Barne Kleinen</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/</link><description>Recent content in Web Applications WS2015/2016 - Homework 1 on Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://progwebtec.github.io/classes/ws2015/wt1wa/homework/index.xml" rel="self" type="application/rss+xml"/><item><title>Web Applications WS2015/2016 - Homework 1</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week1/</guid><description>Homework for Week 1 Project description: Describe your Project on about half a page in complete sentences. Create a github repository and list your project in the wiki: https://github.com/htw-imi-wt1wa-ws2015/rails-projects/wiki Create Use Case Scenarios accompanied with Screen Scribbles for at least one Use Case per Person. Design a Domain Model for your Project. Document it using UML. It should show the associations between the Model classes. Create a Rails app and your models.</description></item><item><title>Web Applications WS2015/2016 - Homework 11</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week11/</guid><description>Homework for Week 11 / Sprint 7 You just keep working on your Project, one Story in your Backlog at a time:
include the backlog in your report. For each story, list its number/id its name storypoints sprint(s) it was/is in (eg. sprint3, or: sprint4(committed, but not completed) sprint5 (completed) etc.) include your level of done in each report, such that I don&amp;rsquo;t have to search for it.</description></item><item><title>Web Applications WS2015/2016 - Homework 2</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week2/</guid><description>Homework for Week 2 Make sure that you&amp;rsquo;re clear on the associations between the classes in your domain model. Create Migrations for adding the foreign keys and, if needed, association tables to the database. Write down the commands you used. You should have at least two associations of different kinds. Run the migrations. Experiment using the rails console to create AR Instances and Associations. using this, create a rake task db:populate to create example data.</description></item><item><title>Web Applications WS2015/2016 - Homework 3</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week3/</guid><description>Homework for Week 3 Decide on (at least) one more advanced view making use of an association, design and implement it. Find a way to practice working with the request parameters that makes sense in your application, e.g. implement a search implement a sort on a field create forms editing more than one object If you&amp;rsquo;re more than 2 people in the group, pick a second view to work on.</description></item><item><title>Web Applications WS2015/2016 - Homework 4</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week4/</guid><description>Homework for Week 4 Create end-to-end (feature or integration tests) for the feature or feature you&amp;rsquo;ve created last week. Create a test for exercise 2 of last week (search, sort, etc, whatever you&amp;rsquo;ve created) create more feature tests if you want to. create a hand-rolled login-procedure following Chapter 8 of Michael Hartl&amp;rsquo;s Tutorial. (note: this is to do it once yourself, you wouldn&amp;rsquo;t create your own in a real project, but rather use a library) Do this either test-driven or add feature tests for the successful login.</description></item><item><title>Web Applications WS2015/2016 - Homework 5</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week5/</guid><description>Homework for Week 5 / Sprint 1 Provide a short description for your Project: Goals/Vision, which Technologies you want to use. Create a backlog for your Project. See https://www.mountaingoatsoftware.com/blog/a-sample-format-for-a-spreadsheet-based-product-backlog for an example. Make sure your stories have an ID and that you have a way to prioritize your backlog. Decide on one, two or a few stories you want to start with. You&amp;rsquo;re still learning the technology, but you should have a goal you&amp;rsquo;re aiming at.</description></item><item><title>Web Applications WS2015/2016 - Homework 6</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week6/</guid><description>Homework for Week 6 / Sprint 2 Prioritize your backlog. Estimate a couple of stories. Create a screen flow for the next or next few stories. Mark these stories as being part of SPRINT2. Using an HTML templating engine / HTML generator library that can be used with your framework to create a click-dummy for the user stories. Make sure to mark the basic installation as your &amp;ldquo;initial commit&amp;rdquo; and document each step with a commit reading something like &amp;ldquo;Story 4711: did this and that&amp;rdquo; Use the simple git workflow described in the links below to generate merges per story.</description></item><item><title>Web Applications WS2015/2016 - Homework 7</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week7/</guid><description>Homework for Week 7 / Sprint 3 Review and groom your Backlog. That is, if you&amp;rsquo;re created a click-dummy for one or more stories, you should defined new stories for actually implementing the functionality. Don&amp;rsquo;t forget to estimate them. Perform a Sprint Planning in your Team. Make sure you understand and write down the acceptance criteria for each story! Document the Tasks you identified for each of your stories. Decide on which stories you want to commit - that is, you are pretty sure you can complete till the next deadline.</description></item><item><title>Web Applications WS2015/2016 - Homework 8</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week10/</guid><description>Homework for Week 10 / Sprint 6 You just keep working on your Project, one Story in your Backlog at a time:
include the backlog in your report. For each story, list its number/id its name storypoints sprint(s) it was/is in (eg. sprint3, or: sprint4(committed, but not completed) sprint5 (completed) etc.) include your level of done in each report, such that I don&amp;rsquo;t have to search for it.</description></item><item><title>Web Applications WS2015/2016 - Homework 8</title><link>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2015/wt1wa/homework/week8/</guid><description>Homework for Week 8 / Sprint 4 If you haven&amp;rsquo;t done that yet, start testing your application. Define your level of done. see this article, for example. Perform a Sprint Planning in your Team. Document the Tasks you identified for each of your stories. Decide on which stories you want to commit - that is, you are pretty sure you can complete till the next deadline. It&amp;rsquo;s ok to plan another story (or two) that you don&amp;rsquo;t yet commit on.</description></item></channel></rss>