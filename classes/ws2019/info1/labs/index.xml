<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info1 - Labs and Exercises on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/</link><description>Recent content in Info1 - Labs and Exercises on Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/classes/ws2019/info1/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Exercise 01: Programming Kara</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-01/</guid><description>Pre-Lab Download the Scenarios and read through the Kara programming exercises in the assignment.
Write down how Kara could solve the task for each one of them. For example, if the programming exercise was Exercise 4 from Worksheet 1, where Kara was to move in a Square and drop a leaf in each corner, you could write down something as this:
1. walk one edge (call move n times), 2.</description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-02/</guid><description>Printed Ticket. Sludge GPre-lab 0. What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.
public TicketMachine (int ticketCost) { int price = ticketCost; balance = 0; total = 0; } 1. How can you tell the difference between a method and a constructor just by looking at its header?
2. What do you think would be printed if you altered the fourth statement of printTicket so that price also has quotes around it, as follows: System.</description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-03/</guid><description>Not yet reviewed and published for WS 2019/20 Term!Books. Abhi SharmaThis week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.
Pre-lab What to Bring to Lab Please finish these exercises before coming to lab.
P1. Why does the following version of refundBalance not give the same results as what we saw in class?
public int refundBalance() { balance = 0; return balance; } P2.</description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-04/</guid><description>Katarina Elevator in Stockholm, Foto by Arjan RichterThis week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.
Pre-lab P0. Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.</description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-05/</guid><description>Foto by waferboardThis week&amp;rsquo;s lab work is intended help you practice using loops.
Pre-lab P0. Write a loop on paper that prints out all multiples of 5 between 10 and 95.
P1. Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.
P2. Assume you have a collection of students called imi1.</description></item><item><title>Exercise 06: Lambda Functions</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-06/</guid><description>This week&amp;rsquo;s lab work is intended help you better understand lambda functions.
Pre-lab Please bring these exercises printed out or written out and completed with you to lab. Doing the pre-lab will save you time during the lab.
P0. If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?
P1. Given the following code:</description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-07/</guid><description>Not yet reviewed and published for WS 2019/20 Term!This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.
Pre-Lab Please bring these exercises and their solutions printed out or written out with you to the lab.
P0 How do you generate random numbers between 1 and 10 with Java? In what package is the library?
P1 How do you define an array that can count how often the numbers between 1 and 10 are generated?</description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-08/</guid><description>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.
Pre Lab Please bring these exercises printed out or written out with you to lab.
P0. Download and open the Balls project (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.
P1. Read the documentation of the Canvas class.</description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-09/</guid><description>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.
Change to Assignment for Winter Term 19/20 we will be doing most of the lab during the 2nd Lecture There will be groups per Test Fixture everyone needs to submit one positive and one negative test case lab is graded with 4* for participation, 0* for no participation What to Bring to Lab Please bring these exercises printed out or written out with you to lab.</description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-10/</guid><description>This week’s lab work will begin a larger project that will occupy us until the end of the semester. The groups you form today will stay groups for the remaining part of the semester!
Pre-lab Please bring these exercises printed out or written out with you to the lab.
P0. Invent your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting.</description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-11/</guid><description>This week’s lab work will continue a larger project that will occupy us until the end of the semester.
Pre-lab Please bring these exercises printed out or written out with you to lab.
P1. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?
P2. What will the starting position of the items be? List which items are going to be in which place.</description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-12/</guid><description>This week&amp;rsquo;s lab work will finish up your project.
Pre-lab Please bring these exercises printed out or written out with you to lab. Please have your name on your page.
P0. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up.</description></item><item><title>Lab Startup</title><link>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ws2019/info1/labs/exercise-00/</guid><description>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. We have lots of rules for the labs, as they are used by many different people during the week. You find a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) here.
Two really important rules are:
No food. We don&amp;rsquo;t like crumbs in the keyboards. Drinks are okay if they are in a container with a screw-on lid and the lid is screwed on.</description></item></channel></rss>