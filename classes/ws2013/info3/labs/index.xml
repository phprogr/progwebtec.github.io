<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info3/SS2013 - Labs and Exercises on Programming and Web Technology</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/</link><description>Recent content in Info3/SS2013 - Labs and Exercises on Programming and Web Technology</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://progwebtec.github.io/classes/ws2013/info3/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Assignment 02 - Use Cases and Class Diagrams</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-02/</guid><description>In this exercise you will create a description, develop a detailed Scenario for a Use Case, and draw a Class Diagram for your Web Application. First, write a detailed description what your application should do (in English or German, as you like) as the[one for the HorseTravelWorld in the old exercise][1]. Then, pick the most important (or interesting) use case. For HTW, that might be the Use Case of a User booking a trip, or of a user browsing for trips, or of a user contributing a review.</description></item><item><title>Assignment 03 - Gilded Rose Patterns and Sequence Diagrams</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-03/</guid><description>Reading Assignment for Friday, May 3rd 2013: For this week&amp;rsquo;s lecture and especially the exercise, you will need some knowledge about sequence diagrams, and the Patterns Strategy, Factory, Factory method, Abstract Factory and Template Method.
Here are some good sources:
Sequence Diagrams: Sample Chapter from Fowler&amp;rsquo;s UML distilled: https://www.informit.com/articles/article.aspx?p=169507&amp;amp;seqNum=2 - Please read the full chapter. Strategy Pattern: - make sure you understand the pattern. Template Method: we talked about that in class (Sandy Metz Ruby example!</description></item><item><title>Assignment 05: Functionality and Libraries</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-05/</guid><description>asdf In this assignment, you will add some functionality to your rails app and try out a couple of the principles and practices we covered in the lectures. For this, you need to add some functionality that you can choose yourself. Read through the whole assignment and decide on the functionality you want to add before starting to implement it. It does not have to be the most important functionality of your app – the goal here is to try out the different aspects of rails.</description></item><item><title>Assignment 1: Testing</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-01/</guid><description>A. Test Driven Development Create a new Java Project in Eclipse (or your preferred IDE).
Source Code for this Assignment: (removed)
Create a Class Node as in Node.java _as Head of a linked list (added 5.4.13) _and develop a method for deleting Nodes in a List test driven, that is, develop the Unit Tests first, as we did in class. Choose one of the two methods we discussed in class to help the assertions - creating a test helper method as in assert.</description></item><item><title>Assignment 4: First Rails Steps</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/assignment-04/</guid><description>In this exercise, you will create a rails application for the first one or two features / user stories of your application. Pick one simple thing that you can solve mainly with the provided CRUD (Create Read Update Delete) features of a rails scaffold using just one or two model classes. If the first things seems to simple for that, add a second – but the goal is really to implement just a little bit of functionality in this first step and mainly set up the whole rails app together with Continuous Integration – we will add Continuous Deployment in the next exercise.</description></item><item><title>Exercise 01: Git and Markdown with a Practical Application</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-01/</guid><description>Pre-Lab Sign up on GitHub if you haven&amp;rsquo;t already done so. Github translates markdown files automatically to HTML - That&amp;rsquo;s how the README.md files you see in most repositories work. Read through the GitHub Flavored Markdown documentation. This exercise is for getting aquaintained with git and github (and markdown) with the practical application of creating online notes collaboratively. This gives you the opportunity to practice using git and github collaboration features with a bunch of plain text files before moving on to managing heaps of source code.</description></item><item><title>Exercise 02 - Use Cases and Scenarios</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-02/</guid><description>In this exercise you will develop detailed Scenarios for Use Cases for an application called &amp;ldquo;HTW&amp;rdquo; - Halloween Treats Worldwide.
First, have a look at the description of the system:
Halloween Treats Worldwide Foto by Pedro J. Ferreira
Halloween Treats Worldwide (HTW) is planned to be an online-shop where people can buy original Halloween Treats. The product manager has asked you to design and develop the platform for their business.</description></item><item><title>Exercise 03 - Class Diagrams</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-03/</guid><description>In this exercise you will create a Class Diagram for the HTW Application. You should work on this exercise in a team of 2-4 people.
Based on the system description in the last exercise and the use cases you&amp;rsquo;ve developed, draw a Class Diagram for your Application. It should contain associations (aggregations and compositions, association classes as needed), generalizations (inheritance), as well as the most important fields and method names of the classes.</description></item><item><title>Exercise 04 - UML Part III: State Machine Diagrams</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-04/</guid><description>Foto by Jeff Kubina
Prelab Please do read this Introduction to State Machine Diagrams before coming to lab!
UML 2 State Machine Diagramming Guidelines I will only give a brief intro/Q&amp;amp;A to State Machine Diagrams in the lab.
Assignment Your job in this exercise is to model all of the following systems (2 points per system for 1-3, 4 points for system 4):
Model the modified goat/cabbage/wolf problem: The farmer is in Schöneweide and wants to get his goat, his cabbage and his wolf over to Oberschöneweide.</description></item><item><title>Exercise 05 - UML Part IV: Sequence Diagrams</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-05/</guid><description>Pelican launch sequence. Foto by Don McCullough Prelab Martin Fowler&amp;rsquo;s Chapter about Sequence Diagrams from the book &amp;ldquo;UML Distilled&amp;rdquo; is available as a sample chapter online.
Read it as a preparation for the lab.
Assignment As a finger exercise for Sequence Diagrams, pick one of the following example projects from the first semester and draw a sequence diagram for the main use case:
The Clock Display / Use case: timeTick() is called Auction / Use case: makeABid() is called Tech Support / Use case: user command is entered (start() method in SupportSystem) The Zuul Project / Use case: user enters command (method: play() in Game.</description></item><item><title>Exercise 06 - Ruby Exercise</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-06/</guid><description>You&amp;rsquo;ll find Stubs, Tests and examples for this exercise on github.
1. Hobby Matcher Program a class &amp;ldquo;Person&amp;rdquo; that implements matching Persons for their hobbies, implementing those two user stories:
Vision/Goal: As a User of the Service, I want to be able to find other People with the same hobbies as I do.
Story 1: As a User of the Service I want to be able to enter my Hobbies as a comma-separated list.</description></item><item><title>Exercise 07: Test Driven Development</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-07/</guid><description>Assignment This exercise is about developing a linked list test driven.
You can either do it in Java - completing the project we&amp;rsquo;ve started in class
TestDrivenList in Java (Eclipse Project) or in Ruby
TestDrivenList in Ruby or, if interested or bored, or undecided, both. But one is sufficient.
The initial class Node is given in both versions, together with a test class and a to_s/toString method to ease testing.</description></item><item><title>Exercise 08: Black and White Box Tests</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-08/</guid><description>Assignment After exploring Unit Testing in the last exercise, we will be looking at black-box and white-box testing in this second testing exercise.
Source code for this exercise: https://github.com/htw-imi-info3/lab-08-blackwhite
Getting started: Give the equivalence classes for testing a method that determines the absolute value of an integer using the black-box methodology. Don&amp;rsquo;t peek at the code yet! Now check out absolute.java in the repository and give the equivalence classes for a white-box test.</description></item><item><title>Exercise 09 - Legacy Code - Refactoring to Patterns</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-09/</guid><description>The Gilded Rose, Trade District, World of Warcraft.Assignment: Gilded Rose Kata Source Code: There are three versions. Choose one. Have brief look at the readme and the GuildedRose class.
Ruby Version: https://github.com/htw-imi-info3/gilded-rose-kata Java/Eclipse Version with Test Stub: https://github.com/htw-imi-info3/GildedRoseJavaEclipse Original Version using Maven: https://github.com/htw-imi-info3/GildedRose Write Characterization Tests To be able to add the new functionality as requested you should write Characterization tests first. You will not yet refactor or add the required new functionality!</description></item><item><title>Exercise 10 - Legacy Code - Refactoring to Patterns - Part 2</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-10-gilded-rose-part-2-draft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-10-gilded-rose-part-2-draft/</guid><description>A Gilded Rose, Foto by KeltonAssignment: Gilded Rose Refactoring and Enhancement Refactor the Gilded Rose and add the requested new functionality.
Last week, you&amp;rsquo;ve developed characterization tests for the guilded rose. Secured by that, you&amp;rsquo;re now safe to refactor the given implementation to a good object-oriented design - but don&amp;rsquo;t forget the goblin in the corner!
That is, you can&amp;rsquo;t simply create an Item-Hierarchy where each item knows how to update it&amp;rsquo;s quality.</description></item><item><title>Exercise 10 - Rails first steps</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-10/</guid><description>In this exercise, you will create a rails application and add one or two features to it in which you work with the Model, View and Controller.
Pick one simple thing that you can solve mainly with the provided CRUD (Create Read Update Delete) features of a rails scaffold using just one model class. If the first things seems to simple for that, add a second – but the goal is really to implement just a little bit of functionality in this first step and mainly set up the whole rails app together with Continuous Integration – we will add Continuous Deployment in the next exercise.</description></item><item><title>Exercise 11 - Associations and Internationalization</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-11/</guid><description>In this assignment, you will add some functionality to your rails app and try out a couple of the principles and practices we covered in the lectures. For this, you need to add some functionality that you can choose yourself. Read through the whole assignment and decide on the functionality you want to add before starting to implement it. It does not have to be the most important functionality of your app – the goal here is to try out the different aspects of rails.</description></item><item><title>Lab Startup: Set up your development environment</title><link>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ws2013/info3/labs/lab-00/</guid><description>&amp;mdash; To be done as e-Learning on Friday 11-Oct-2013 until Thursday 17-Oct-2013 latest! &amp;mdash;
Which Computer to use? As most of your colleagues in the former semesters completely ignored the new iMacs in our Web Technology lab and rather unfolded their old, dirty little subnotebooks in front of the 27&amp;rsquo;&amp;rsquo; screens (which even cannot be used as an external monitor), I expect that you will also mainly use your personal computers for working on the exercises.</description></item></channel></rss>