<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info 2 Material on Programming and Web Technology</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/</link><description>Recent content in Info 2 Material on Programming and Web Technology</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://progwebtec.github.io/classes/ss2020/info2/material/index.xml" rel="self" type="application/rss+xml"/><item><title>Info 2 Finger Exercises</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/topic02_1_finger_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/topic02_1_finger_exercises/</guid><description>This is a small collection of programming finger exercises to get you back to programming java, and to get to know your new programming environment.
I&amp;rsquo;ve numbered them for easier referencing in the Q&amp;amp;A.
Basic Exercises FE_1: Count 0s in an array Write a method that takes an integer array as parameter and returns the number of 0 contained in it.
FE_2: Count occurrences of an character in a String Write a method that takes a String s and a character c as parameters and returns the number of occurrences of c in s.</description></item><item><title>Info 2 Material - Algorithms and Data Structures</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/algorithms_and_datastructures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/algorithms_and_datastructures/</guid><description>Textbooks and Material Algorithms and Data Structures in General The broader topic of this course is Algorithms and Data Structures. You&amp;rsquo;ll find lots of textbooks and other material on this general and all of it singular topics. I picked out three textbooks:
Overview Detailed Info</description></item><item><title>Info 2 Material Topic 01 - CRC Cards</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/topic01_crc_cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/topic01_crc_cards/</guid><description>CRC Cards Literature Software Suggestions</description></item><item><title>Info 2 Python</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/python/</guid><description>Intro Learn python with unit tests: https://github.com/htw-imi-info2/learn-python-with-tests/tree/ws2018
Algorithms and Datastructure Examples from &amp;ldquo;Introduction to Programming in Python&amp;rdquo; Home Page of the Book: Introduction to Programming in Python
Installation You need to install a couple of additional packages to be able to run most of the examples in the book. See the To get started section on the Home Page - you can stop above &amp;ldquo;Configuring IDLE&amp;rdquo; if you already have a way to edit and run python programs on your computer.</description></item><item><title>Info2 WS2018 Topics and Grading</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/topics_and_grading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/topics_and_grading/</guid><description>With questions
Sum: 115% - There might be questions that count in two categories - eg. the Complexity of a searching algorithm.
115 Lecture Topic 10 Properties, especially Complexity of Algorithms 20 Abstract Data Types / Data Structures - Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees, AVL Trees - The Java Collection Framework 15 Graphs and Graph Algorithms Graph Data Structure Graph Algorithms: Breath-First and Depth-First Search paths Dijkstra: cheapest path between start and end 20 2-3 aus: File I/O andNetworking in Java (Sockets) Maximum Contiguous Subsequence Sum Concurrency Rekursion Divide &amp;amp; Conquer Random numbers, Probabilistic Algorithms Finite State Automata (Grammars) 25 Sorting: pseudocode / in worten beschreiben oder daran erkennen, manual - Radixsort l * n - Mergesort n log n - Quicksort n log n - Heapsort n log n - Insertion Sort - Bogo Sort - Selection Sort - Cocktail Shaker 15 Searching and String Searching - Binary Search - Linear Search - String Searching - KMP (Skip Searching) 10 Python Draft done in class 4.</description></item><item><title>Info2 WS2018 Topics and Grading</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/topics_and_grading_questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/topics_and_grading_questions/</guid><description>Sum: 115% - There might be questions that count in two categories - eg. the Complexity of a searching algorithm.
115 Lecture Topic A 10 Properties, especially Complexity of Algorithms B 20 Abstract Data Types / Data Structures - Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees, AVL Trees - The Java Collection Framework C 15 Graphs and Graph Algorithms Graph Data Structure Graph Algorithms: Breath-First and Depth-First Search paths Dijkstra: cheapest path between start and end D 20 2-3 aus: File I/O andNetworking in Java (Sockets) Maximum Contiguous Subsequence Sum Concurrency Rekursion Divide &amp;amp; Conquer Random numbers, Probabilistic Algorithms Finite State Automata (Grammars) E 25 Sorting: pseudocode / in worten beschreiben oder daran erkennen, manual - Radixsort l * n - Mergesort n log n - Quicksort n log n - Heapsort n log n - Insertion Sort - Bogo Sort - Selection Sort - Cocktail Shaker F 15 Searching and String Searching - Binary Search - Linear Search - String Searching - KMP (Skip Searching) G 10 Python Draft done in class 4.</description></item><item><title>Info2 WS2018 Topics and Grading Draft</title><link>https://progwebtec.github.io/classes/ss2020/info2/material/topics_and_grading_class_draft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/classes/ss2020/info2/material/topics_and_grading_class_draft/</guid><description>This is just the draft!! see the final version
Rough Overview: Percent and Topic Properties(Complexity) of Algorithms
10-15 Abstract Data Types / Data Structures
Queue, Stack, List, Set, Directory/Map, Bags, Trees, Binary Search Trees The Java Collection Framework 10 Graphs
Graph Algorithms: Breath-First and Depth-First Search Dijkstra: cheapest path between start and end 10 Complexity of Algorithms Maximum Contiguous Subsequence Sum
File I/O 5 Networking in Java (Sockets)</description></item></channel></rss>