<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info1 - Labs and Exercises on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/</link><description>Recent content in Info1 - Labs and Exercises on Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/classes/ss2018/info1/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Exercise 01: Getting Started and Shapes</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-01/</guid><description>Welcome to the laboratory - that&amp;rsquo;s what we call these rooms filled with computer equipment. Each computer is a so-called dual-boot computer that can boot to Windows or Ubuntu Linux. As computer science students we expect you to be able to deal with Windows, Unix, and Mac OS operating systems.
We have lots of rules for the labs, as they are used by many different people during the week. Usually we&amp;rsquo;re in one of three available labs, you find an overview of them including a link to the rules (&amp;ldquo;Laborordnung&amp;rdquo;) here.</description></item><item><title>Exercise 02: TicketMachine</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-02/</guid><description>Printed Ticket. Sludge GPre-lab What to Bring to Lab Please bring these exercises printed out or written out with you to lab. Please have your name on your page.
P1. What could be wrong with the following constructor? Don&amp;rsquo;t execute it, think about it in your head.
public TicketMachine (int ticketCost) { int price = ticketCost; balance = 0; total = 0; } P2. How can you tell the difference between a method and a constructor just by looking at its header?</description></item><item><title>Exercise 03: Book Exercise</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-03/</guid><description>Books. Abhi SharmaThis week&amp;rsquo;s lab work is intended to practice creating classes with data fields, constructors, methods, assignments and conditional statements.
Pre-lab What to Bring to Lab Please finish these exercises before coming to lab.
P1. Why does the following version of refundBalance not give the same results as what we saw in class?
public int refundBalance() { balance = 0; return balance; } P2.
What happens if you try to compile the TicketMachine class with the following version of refundBalance?</description></item><item><title>Exercise 04: Rock Around the Clock</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-04/</guid><description>Katarina Elevator in Stockholm, Foto by Arjan RichterThis week&amp;rsquo;s lab work is intended to get you to implement parts of a class that is given for you. You are also to begin to see the idea of modularization, that is, splitting up code into classes.
Pre-lab P1. Which of the following expressions returns true? After writing your answers on paper, open the CodePad in BlueJ and try it out.</description></item><item><title>Exercise 05: A Better Notebook</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-05/</guid><description>Foto by waferboardThis week&amp;rsquo;s lab work is intended help you practice using loops.
Pre-lab P1. Write a loop on paper that prints out all multiples of 5 between 10 and 95.
P2. Write a method called sumBetween that adds up all numbers between two numbers, a and b, that are passed into the method as parameters. Include a but not b in the sum.
P3. Assume you have a collection of students called imi1.</description></item><item><title>Exercise 06: Lambda Functions</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-06/</guid><description>Pre-lab This week&amp;rsquo;s lab work is intended help you better understand lambda functions.
What to Bring to Lab Please bring these exercises printed out or written out with you to lab. Please have your name on your page.
P1. If you have a collection called myList, what Java code would you have to write to apply some code to each of the members in the list?
P2. Given the following code:</description></item><item><title>Exercise 07: Lotto and Technical Support</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-07/</guid><description>This week&amp;rsquo;s lab work is intended give you practice using the Random class and HashMaps.
Pre-Lab Please bring these exercises printed out or written out with you to lab. Please have your name on your page.
P1. How do you generate random numbers between 1 and 10 with Java? In what package is the library?
P2. How do you define an array that can count how often the numbers between 1 and 10 are generated?</description></item><item><title>Exercise 08: Bouncing Balls</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-08/</guid><description>This week&amp;rsquo;s lab work is intended give you practice working with the basic concepts of programming.
What to Bring to Lab Please bring these exercises printed out or written out with you to lab.
P1. Download and open the Balls project (Chapter 05). Create a BallDemo object and execute the drawDemo and bounce methods. Then read the BallDemo source code. Describe, in detail, how these methods work for your report.</description></item><item><title>Exercise 09: Testing with JUnit</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-09/</guid><description>This week&amp;rsquo;s lab work is intended give you practice testing and writing assertions.
What to Bring to Lab Please bring these exercises printed out or written out with you to lab. Please have your name on your page.
P1. Write down six test cases for Day and Appointment that were not given in the lecture. Give each test case (and the ones from the lecture) a name.
P2. What assertions do you need in order to be able to automate the tests?</description></item><item><title>Exercise 10: The World of You</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-10/</guid><description>Pre-lab This week’s lab work will begin a larger project that will occupy us until the end of the semester.
What to Bring to Lab Please bring these exercises printed out or written out with you to lab.
P1. Design your own game scenario away from the computer. Don’t worry about implementation or classes or programming. Just try and come up with something interesting. It needs to be the basic structure of a player moving through different locations.</description></item><item><title>Exercise 11: Keeping Track of Stuff</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-11/</guid><description>Pre-lab This week’s lab work will continue a larger project that will occupy us until the end of the semester.
What to Bring to Lab Please bring these exercises printed out or written out with you to lab.
P1. What items could be kept in the locations in your game? Come up with a list of at least 10 items. How heavy is each item?
P2. What will the starting position of the items be?</description></item><item><title>Exercise 12: Pick up and Carry</title><link>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/classes/ss2018/info1/labs/exercise-12/</guid><description>Pre-lab This week&amp;rsquo;s lab work will finish up your project.
What to Bring to Lab Please bring these exercises printed out or written out with you to lab. Please have your name on your page.
P1. Here are some informal specifications: A player must be able to pick up items from the current room. They can carry any number of items, but only up to a maximum weight limit. Some items are too heavy to be picked up.</description></item></channel></rss>