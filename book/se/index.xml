<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming and Software Engineering on Programming and Web Technology</title><link>https://progwebtec.github.io/book/se/</link><description>Recent content in Programming and Software Engineering on Programming and Web Technology</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://progwebtec.github.io/book/se/index.xml" rel="self" type="application/rss+xml"/><item><title>Sorting Algorithms</title><link>https://progwebtec.github.io/book/se/sorting-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://progwebtec.github.io/book/se/sorting-algorithms/</guid><description>Algorithm Description Invariant Plus O(n) Comparisions Swaps Stable adaptive space Selection Sort select smallest from rest, append to already sorted on left a[1..i] in place n^2 n^2 n not stable Insertion Sort take card from unsorted pile (right), insert it into sorted pile a[1..i] sorted adaptable, simple -&amp;gt; ok for small n n^2 n^2 n^2 stable yes O(1) extra Shell Sort Insertion sort on every h-th element decreasing h down to 1 each h-array is sorted adaptable, still simple n^(3/2) stable yes O(1) extra Bubble Sort go up through array, compare two and swap if not in right order (up to 1.</description></item></channel></rss>